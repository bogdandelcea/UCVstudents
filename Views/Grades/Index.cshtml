@inject SignInManager<IdentityUser> SignInManager
@model IEnumerable<UCVstudents.Models.Grade>

@{
    ViewData["Title"] = "Grades";
}

<h1>Grades</h1>
@if (SignInManager.IsSignedIn(User))
{
    @if (User.IsInRole("Teacher"))
    {
        <p>
            <a asp-action="Create" class="btn btn-primary">Assign new grade</a>
        </p>
    }
}
<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.GradeValue)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Student)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Subject)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model) {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.GradeValue)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Student.StudentId)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Subject.SubjectId)
            </td>
            <td>
                <a asp-action="Edit" asp-route-id="@item.GradeId">Edit</a> |
                <a asp-action="Details" asp-route-id="@item.GradeId">Details</a> |
                <a asp-action="Delete" asp-route-id="@item.GradeId">Delete</a>
            </td>
        </tr>
}
    </tbody>
</table>
